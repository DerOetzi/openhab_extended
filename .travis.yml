os: linux
dist: bionic
language: shell
branches:
  only:
    - master
before_install:
  - set -e
  # Configure environment so changes are picked up when the Docker daemon is restarted after upgrading
  - echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json
  - export DOCKER_CLI_EXPERIMENTAL=enabled
  - docker run --rm --privileged docker/binfmt:a7996909642ee92942dcd6cff44b9b95f08dad64
  # Upgrade to Docker CE 19.03 for BuildKit support
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt-get update
  - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce=5:19.03.8~3-0~ubuntu-bionic # pin version for reproducibility
  - sudo apt-get install -y uidmap dos2unix
  # Show info to simplify debugging and create a builder
  - docker info
  - docker buildx create --name builder --use
  - docker buildx ls
  - source ./update-functions.sh
  - dos2unix template/*.sh
install:
  - mkdir $VERSION
  - mkdir $VERSION/cont-init.d
  - cp template/00-jython_initialize.sh $VERSION/cont-init.d/
  - cp template/Dockerfile $VERSION/Dockerfile
  - sed -i -e "s|%version%|$VERSION|" $VERSION/Dockerfile;
  - sed -i -e "s|%signal_version%|$SIGNAL_VERSION|" $VERSION/Dockerfile;
  - echo "-------- Dockerfile $VERSION --------";
  - cat $VERSION/Dockerfile;
  - build_arg_options="--build-arg BUILD_DATE=$(date +"%Y-%m-%dT%H:%M:%SZ") --build-arg VCS_REF=$TRAVIS_COMMIT --build-arg VERSION=$VERSION"
  - tags=$(tags $VERSION $DIST)
  - echo $tags
  - tag_options=${tags//$(docker_repo)/--tag $(docker_repo)}
  - build_options="$build_arg_options --platform $(platforms $VERSION $DIST) $tag_options --progress plain"
  - path="$VERSION"
  - if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin;
        docker buildx build $build_options --push $path;
    else
        docker buildx build $build_options $path;
    fi
matrix:
  fast_finish: true
env:
  global:
    - SIGNAL_VERSION=0.6.7
  matrix:
    - VERSION=2.5.6 DIST=debian
    - VERSION=3.0.0-snapshot DIST=debian
